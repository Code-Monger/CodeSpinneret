package spellcheck

// getCommonWords returns a map of common English words
func getCommonWords() map[string]bool {
	// Initialize the fuzzy model (this will load the embedded dictionary)
	getFuzzyModel()

	// Load words from the embedded dictionary
	commonWords := loadEmbeddedDictionary()

	// Add common English words that might not be in the dictionary
	// or ensure that critical words are included
	additionalWords := map[string]bool{
		"the": true, "and": true, "that": true, "have": true, "for": true,
		"not": true, "with": true, "you": true, "this": true, "but": true,
		"his": true, "from": true, "they": true, "say": true, "she": true,
		"will": true, "one": true, "all": true, "would": true, "there": true,
		"their": true, "what": true, "out": true, "about": true, "who": true,
		"get": true, "which": true, "when": true, "make": true, "can": true,
		"like": true, "time": true, "just": true, "him": true, "know": true,
		"take": true, "people": true, "into": true, "year": true, "your": true,
		"good": true, "some": true, "could": true, "them": true, "see": true,
		"other": true, "than": true, "then": true, "now": true, "look": true,
		"only": true, "come": true, "its": true, "over": true, "think": true,
		"also": true, "back": true, "after": true, "use": true, "two": true,
		"how": true, "our": true, "work": true, "first": true, "well": true,
		"way": true, "even": true, "new": true, "want": true, "because": true,
		"any": true, "these": true, "give": true, "day": true, "most": true,
		"us": true, "is": true, "are": true, "be": true, "was": true, "were": true,
		"am": true, "been": true, "being": true, "do": true, "does": true, "did": true,
		"done": true, "doing": true, "has": true, "had": true, "having": true,
		"go": true, "goes": true, "went": true, "gone": true, "going": true,
		"hello": true, "world": true, "main": true, "fmt": true, "println": true,
		"display": true, "text": true, "message": true, "user": true, "print": true,
		"account": true, "function": true, "variable": true, "string": true,
		"comment": true, "spelling": true, "mistake": true, "package": true,
		"import": true, "code": true, "program": true, "software": true,
		"computer": true, "system": true, "data": true, "file": true,
		"directory": true, "path": true, "name": true, "type": true,
		"value": true, "method": true, "class": true, "object": true,
		"interface": true, "struct": true, "array": true, "slice": true,
		"map": true, "channel": true, "goroutine": true, "thread": true,
		"process": true, "memory": true, "disk": true, "network": true,
		"server": true, "client": true, "request": true, "response": true,
		"error": true, "exception": true, "bug": true, "debug": true,
		"test": true, "unit": true, "integration": true, "performance": true,
		"benchmark": true, "profile": true, "optimize": true, "refactor": true,
		"design": true, "pattern": true, "algorithm": true, "complexity": true,
		"efficiency": true, "speed": true, "cpu_usage": true, "cpu": true,
		"io": true, "input": true, "output": true, "read": true, "write": true,
		"open": true, "close": true, "create": true, "delete": true,
		"update": true, "insert": true, "select": true, "query": true,
		"database": true, "table": true, "row": true, "column": true,
		"field": true, "record": true, "key": true, "val": true,
		"index": true, "search": true, "find": true, "match": true,
		"replace": true, "regex": true, "regular": true, "expression": true,
	}

	// Add the additional words to the common words dictionary
	for word, _ := range additionalWords {
		commonWords[word] = true
	}

	return commonWords
}

// getCommonMisspellings returns a map of common misspellings to their corrections
func getCommonMisspellings() map[string]string {
	return map[string]string{
		"teh":            "the",
		"adn":            "and",
		"taht":           "that",
		"thier":          "their",
		"recieve":        "receive",
		"beleeve":        "believe",
		"werd":           "weird",
		"acheive":        "achieve",
		"accomodate":     "accommodate",
		"accross":        "across",
		"agressive":      "aggressive",
		"apparant":       "apparent",
		"appearence":     "appearance",
		"arguement":      "argument",
		"assasination":   "assassination",
		"basicly":        "basically",
		"begining":       "beginning",
		"beleive":        "believe",
		"belive":         "believe",
		"buisness":       "business",
		"calender":       "calendar",
		"camoflage":      "camouflage",
		"catagory":       "category",
		"cemetary":       "cemetery",
		"changable":      "changeable",
		"cheif":          "chief",
		"collaegue":      "colleague",
		"collegue":       "colleague",
		"comming":        "coming",
		"commited":       "committed",
		"commitee":       "committee",
		"compitition":    "competition",
		"conceed":        "concede",
		"congradulate":   "congratulate",
		"consciencious":  "conscientious",
		"concious":       "conscious",
		"consious":       "conscious",
		"cooly":          "coolly",
		"definately":     "definitely",
		"desparate":      "desperate",
		"dissapoint":     "disappoint",
		"disasterous":    "disastrous",
		"embarass":       "embarrass",
		"enviroment":     "environment",
		"existance":      "existence",
		"experiance":     "experience",
		"facinating":     "fascinating",
		"familar":        "familiar",
		"finaly":         "finally",
		"flourescent":    "fluorescent",
		"foriegn":        "foreign",
		"freind":         "friend",
		"garantee":       "guarantee",
		"goverment":      "government",
		"grammer":        "grammar",
		"happend":        "happened",
		"harrass":        "harass",
		"honourary":      "honorary",
		"humourous":      "humorous",
		"idiosyncracy":   "idiosyncrasy",
		"immediatly":     "immediately",
		"independant":    "independent",
		"interupt":       "interrupt",
		"irresistable":   "irresistible",
		"knowlege":       "knowledge",
		"liason":         "liaison",
		"libary":         "library",
		"lisence":        "license",
		"maintainance":   "maintenance",
		"millenium":      "millennium",
		"miniscule":      "minuscule",
		"mischievious":   "mischievous",
		"mispell":        "misspell",
		"neccessary":     "necessary",
		"necesary":       "necessary",
		"negotiaing":     "negotiating",
		"noticable":      "noticeable",
		"occassion":      "occasion",
		"occassionally":  "occasionally",
		"occurance":      "occurrence",
		"occured":        "occurred",
		"ocurrence":      "occurrence",
		"ommision":       "omission",
		"orignal":        "original",
		"outragous":      "outrageous",
		"parrallel":      "parallel",
		"parliment":      "parliament",
		"particurly":     "particularly",
		"passtime":       "pastime",
		"persistant":     "persistent",
		"personell":      "personnel",
		"persue":         "pursue",
		"posession":      "possession",
		"potatos":        "potatoes",
		"preceed":        "precede",
		"prefered":       "preferred",
		"prefering":      "preferring",
		"presense":       "presence",
		"probly":         "probably",
		"pronounciation": "pronunciation",
		"prufe":          "proof",
		"questionaire":   "questionnaire",
		"receve":         "receive",
		"reccomend":      "recommend",
		"recomend":       "recommend",
		"refered":        "referred",
		"refering":       "referring",
		"religous":       "religious",
		"remeber":        "remember",
		"repitition":     "repetition",
		"rythm":          "rhythm",
		"secratary":      "secretary",
		"seperate":       "separate",
		"shedule":        "schedule",
		"sieze":          "seize",
		"similer":        "similar",
		"sinceerly":      "sincerely",
		"speach":         "speech",
		"succesful":      "successful",
		"successfull":    "successful",
		"supercede":      "supersede",
		"suprise":        "surprise",
		"tendancy":       "tendency",
		"therefor":       "therefore",
		"threshhold":     "threshold",
		"tomatos":        "tomatoes",
		"tommorrow":      "tomorrow",
		"tounge":         "tongue",
		"truely":         "truly",
		"unforseen":      "unforeseen",
		"unfortunatly":   "unfortunately",
		"untill":         "until",
		"unuseual":       "unusual",
		"useable":        "usable",
		"vaccuum":        "vacuum",
		"vegatarian":     "vegetarian",
		"vehical":        "vehicle",
		"visious":        "vicious",
		"wellcome":       "welcome",
		"whereever":      "wherever",
		"wich":           "which",
		"writting":       "writing",
	}
}

// getProgrammingMisspellings returns a map of common programming misspellings
func getProgrammingMisspellings() map[string]string {
	return map[string]string{
		"acount":         "account",
		"mesage":         "message",
		"messge":         "message",
		"coment":         "comment",
		"speling":        "spelling",
		"mispelled":      "misspelled",
		"funtion":        "function",
		"functoin":       "function",
		"varaible":       "variable",
		"varaiable":      "variable",
		"vaiable":        "variable",
		"paramater":      "parameter",
		"paramter":       "parameter",
		"parmaeter":      "parameter",
		"arguement":      "argument",
		"arguemnt":       "argument",
		"retrun":         "return",
		"reutrn":         "return",
		"retrn":          "return",
		"lenth":          "length",
		"widht":          "width",
		"heigth":         "height",
		"recieve":        "receive",
		"recive":         "receive",
		"receve":         "receive",
		"retreive":       "retrieve",
		"retreve":        "retrieve",
		"retreival":      "retrieval",
		"intialize":      "initialize",
		"initalise":      "initialise",
		"intialization":  "initialization",
		"implment":       "implement",
		"implmentation":  "implementation",
		"implimentation": "implementation",
		"implmnt":        "implementing",
		"implmented":     "implemented",
		"implmnt2":       "implementing",
		"implmnt3":       "implementations",
		"implmnt4":       "implementations",
		"implmnt5":       "implementations",
	}
}
